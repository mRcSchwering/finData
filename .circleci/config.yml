version: 2
jobs:

  build:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: Build finData
          command: docker build -t "mrcschwering/cci-findata_build:latest" .
      - run:
          name: Push finData build
          command: |
            docker login -u="$DOCKERHUB_USER" -p="$DOCKERHUB_PASS"
            docker push "mrcschwering/cci-findata_build:latest"

  smoke-scraper:
    working_directory: /app
    docker:
      - image: mrcschwering/cci-findata_build:latest
    steps:
      - run: python3 -m unittest discover -s test -v -p "*test_scrape*"

  smoke-loader:
    working_directory: /app
    docker:
      - image: mrcschwering/cci-findata_build:latest
    steps:
      - run: python3 -m unittest discover -s test -v -p "*test_load*"

  integration-postgres:
    docker:
      - image: docker:17.05.0-ce-git
    environment:
      PG_NAME: "postgres_server"
    steps:
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Start server and client containers
          command: docker-compose up -d
      - run:
          name: Create a new DB
          command: |
            docker-compose run client_postgres \
              createdb -h server_postgres -p 5432 findata -U postgres -w postgres
      - run:
          name: Query new DB
          command: |
            docker-compose run client_postgres \
              psql -h server_postgres -p 5432 findata -U postgres -w postgres \
              --command="\l"

  deploy:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: Build tested finData
          command: docker build -t "mrcschwering/cci-findata_deploy:latest" .
      - run:
          name: Push tested finData
          command: |
            docker login -u="$DOCKERHUB_USER" -p="$DOCKERHUB_PASS"
            docker push "mrcschwering/cci-findata_deploy:latest"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - smoke-scraper:
          requires:
            - build
      - smoke-loader:
          requires:
            - build
      - integration-postgres:
          requires:
            - smoke-scraper
            - smoke-loader
      - deploy:
          requires:
            - integration-postgres
