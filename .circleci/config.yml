version: 2
jobs:

  build:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: Build finData
          command: docker build -t "mrcschwering/cci-findata_build:latest" .
      - run:
          name: Push finData build
          command: |
            docker login -u="$DOCKERHUB_USER" -p="$DOCKERHUB_PASS"
            docker push "mrcschwering/cci-findata_build:latest"

  smoke-scraper:
    working_directory: /app
    docker:
      - image: mrcschwering/cci-findata_build:latest
    steps:
      - run: python3 -m unittest discover -s test -v -p "*test_scrape*"

  smoke-loader:
    working_directory: /app
    docker:
      - image: mrcschwering/cci-findata_build:latest
    steps:
      - run: python3 -m unittest discover -s test -v -p "*test_load*"

  integration-postgres:
    docker:
      - image: docker:17.05.0-ce-git
    environment:
      PG_NAME: "postgres_server"
    steps:
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: Install psql client
          command: |
            apk --update add postgresql-client
      - run:
          name: Start Postgres server
          command: |
            docker run --name="$PG_NAME" --hostname="$PG_NAME" -d -p 5432:5432 postgres:9.5.12-alpine
      - run:
          name: Creating Test DB
          command: |
            docker ps
            docker ps -a | grep "$PG_NAME"
            docker network ls
            netstat -plunt
            netstat -plunt | grep 5432
            psql -h 35.196.76.213 -p 5432 -c "CREATE DATABASE testdb" -U postgres -w postgres

  deploy:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: Build tested finData
          command: docker build -t "mrcschwering/cci-findata_deploy:latest" .
      - run:
          name: Push tested finData
          command: |
            docker login -u="$DOCKERHUB_USER" -p="$DOCKERHUB_PASS"
            docker push "mrcschwering/cci-findata_deploy:latest"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - smoke-scraper:
          requires:
            - build
      - smoke-loader:
          requires:
            - build
      - integration-postgres:
          requires:
            - smoke-scraper
            - smoke-loader
      - deploy:
          requires:
            - integration-postgres
